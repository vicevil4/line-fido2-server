/*
 * Copyright 2022 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
buildscript {
    ext {
        springBootVersion = '2.4.3'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.asciidoctor:asciidoctor-gradle-jvm:3.3.2"
    }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'org.asciidoctor.jvm.convert'

group = 'com.linecorp.line.auth.fido.fido2'
version = '0.1.1-SNAPSHOT'
sourceCompatibility = 1.8

jar.enabled = true
bootJar.enabled = true

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}
configurations {
    asciidoctorExtensions
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

asciidoctor {
    configurations "asciidoctorExtensions"
    inputs.dir snippetsDir
    dependsOn test
}

task makeRestDocs(type: Copy) {
    dependsOn asciidoctor

    from file("${asciidoctor.outputDir}")
    into file('src/main/resources/static/docs')
}

task dockerBuild() {
    jar.enabled = false
    dependsOn(bootJar)
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-cbor')
    runtime('org.springframework.boot:spring-boot-devtools')
    implementation('org.springframework.boot:spring-boot-starter-logging')
    implementation('org.springframework.boot:spring-boot-starter-validation')

    implementation 'junit:junit:4.12'

    //redis client
    implementation('redis.clients:jedis:3.5.0')

    //logging
    implementation('org.zalando:logbook-spring-boot-starter:1.8.1')

    //swagger
    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')

    //jwt
    implementation('com.auth0:java-jwt:3.4.0')

    //local redis
    implementation('com.github.kstyrc:embedded-redis:0.6')

    //bouncy castle
    implementation('org.bouncycastle:bcprov-jdk15on:1.60')

    //eddsa library
    implementation('net.i2p.crypto:eddsa:0.3.0')

    //retrofit
    implementation('com.squareup.retrofit2:retrofit:2.4.0')
    implementation('com.squareup.retrofit2:converter-jackson:2.4.0')

    compileOnly 'org.projectlombok:lombok:1.18.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.18'

    implementation project(':common')
//    implementation('com.linecorp.line.auth.fido.fido2:common:1.1.1-SNAPSHOT')

    implementation ('org.springframework.boot:spring-boot-starter-jdbc')

    runtime ('mysql:mysql-connector-java')

    //local db
    runtime('com.h2database:h2')

    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache:2.4.0'
    implementation 'org.ehcache:ehcache:3.8.1'
    implementation 'javax.cache:cache-api:1.1.1'

    compileOnly('org.springframework.boot:spring-boot-configuration-processor')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.1.0'

    //Spring Rest Doc
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}
